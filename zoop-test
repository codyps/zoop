#! /bin/bash
set -euf -o pipefail
if [ -z "${RUST_BACKTRACE:+}" ]; then
	export RUST_BACKTRACE=1
fi

if [ $# -ne 1 ]; then
	>&2 echo "usage: $0 <test-filesystem>"
	exit 1
fi

error_count=0
test_count=0

ok1() {
	local msg=$1
	shift
	: $((test_count=test_count+1))
	if "$@"; then
		>&2 echo "ok     - $msg ($*)"
	else
		>&2 echo "not ok - $msg ($*)"
		: $((error_count=error_count+1))
	fi
}

exit_status() {
	if [ "$error_count" -gt 0 ]; then
		>&2 echo "# failed: $error_count errors, $test_count tests"
		exit 1
	fi
	exit
}

ZOOP_TEST_DS="$1-$$"

: ${ZOOP:=target/debug/zoop}

ZOOP_TEST_PATH=/tmp/zoop-test-$$

zoop_test_ds=false
: ${ZOOP_KEEP_TMP:=false}
cleanup() {
	if $ZOOP_KEEP_TMP; then
		return	
	fi
	if $zoop_test_ds && [ -n "$ZOOP_TEST_DS" ]; then
		zfs destroy -rf "$ZOOP_TEST_DS"
	fi
}
trap cleanup EXIT

zfs create "$ZOOP_TEST_DS" -o "mountpoint=$ZOOP_TEST_PATH"
zoop_test_ds=true


SRC_PATH="$ZOOP_TEST_PATH/src"
DST_PATH="$ZOOP_TEST_PATH/dst"

SRC_DS="$ZOOP_TEST_DS/src"
DST_DS="$ZOOP_TEST_DS/dst"

zfs create "$SRC_DS"
zfs create "$DST_DS"

for i in $(seq 1 5); do
	touch "$SRC_PATH/$i"
	zfs snapshot "$SRC_DS@$i"
done

"$ZOOP" zcopy -vn "$SRC_DS" "$DST_DS"
"$ZOOP" zcopy -v "$SRC_DS" "$DST_DS"

for i in $(seq 25 30); do
	touch "$SRC_PATH/$i"
	zfs snapshot "$SRC_DS@$i"
done

"$ZOOP" zcopy -v "$SRC_DS" "$DST_DS"

to_bm() {
	local ds="$1"
	local n="$2"
	zfs bookmark "${ds}@${n}" "${ds}#${n}"
	zfs destroy "${ds}@${n}"
}

to_bm "$SRC_DS" 30

for i in $(seq 40 44); do
	touch "$SRC_PATH/$i"
	zfs snapshot "$SRC_DS@$i"
done

"$ZOOP" zcopy -v "$SRC_DS" "$DST_DS"

zfs create "$SRC_DS/sub_ds"

snaps() {
	local sub=""
	if [ $# -eq 3 ]; then
		sub="/$3"
	fi
	for i in $(seq $1 $2); do
		touch "$SRC_PATH$sub/$i"
		zfs snapshot "$SRC_DS$sub@$i"
	done
}

snaps 10 15 sub_ds

"$ZOOP" zcopy -v "$SRC_DS" "$DST_DS"


ok1 "non-recursive does not recurse" test ! -f "$DST_PATH/sub_ds/10"

"$ZOOP" zcopy -vr "$SRC_DS" "$DST_DS"

ok1 "recusive does R"       zfs list -Hp "$DST_DS/sub_ds"
ok1 "recusive does recurse" test -f "$DST_PATH/sub_ds/10"

exit_status
